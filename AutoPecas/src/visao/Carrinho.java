
package visao;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 13151000014
 */
public class Carrinho extends javax.swing.JFrame {

    /**
     * Creates new form Carrinho
     */
    public Carrinho() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlCarrinho = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbFinalizarCompra = new javax.swing.JButton();
        jbCancelarCompra = new javax.swing.JButton();
        jlFormadePagamento = new javax.swing.JLabel();
        jcbFormadePagamento = new javax.swing.JComboBox();
        jbGerarRelatorio = new javax.swing.JButton();
        jlValorTotal = new javax.swing.JLabel();
        jlValor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(99, 113, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlCarrinho.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jlCarrinho.setText("Carrinho");
        jPanel1.add(jlCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 100, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Produto", "Quantidade", "Preço", "Valor Total"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 450, 90));

        jbFinalizarCompra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbFinalizarCompra.setText("Finalizar Compra");
        jbFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinalizarCompraActionPerformed(evt);
            }
        });
        jPanel1.add(jbFinalizarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 150, -1));

        jbCancelarCompra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbCancelarCompra.setText("Cancelar Compra");
        jbCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarCompraActionPerformed(evt);
            }
        });
        jPanel1.add(jbCancelarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 170, -1));

        jlFormadePagamento.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlFormadePagamento.setText("Forma de Pagamento:");
        jPanel1.add(jlFormadePagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jcbFormadePagamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbFormadePagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cartão de Crédito", "Cartão de Débito", "Á vista", "Cheque" }));
        jcbFormadePagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFormadePagamentoActionPerformed(evt);
            }
        });
        jPanel1.add(jcbFormadePagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 160, -1));

        jbGerarRelatorio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbGerarRelatorio.setText("Gerar relatório");
        jbGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGerarRelatorioActionPerformed(evt);
            }
        });
        jPanel1.add(jbGerarRelatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 140, -1));

        jlValorTotal.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlValorTotal.setText("Valor Total:");
        jPanel1.add(jlValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jlValor.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlValor.setText("0");
        jPanel1.add(jlValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbFormadePagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFormadePagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFormadePagamentoActionPerformed

    private void jbFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinalizarCompraActionPerformed
        
        JOptionPane.showMessageDialog(null, "Compra realizada com sucesso");
        
        FramePrincipal.verificar=false;
        FramePrincipal.valorVenda=0;
        try { 
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1/dbautopecas", "root", "");           
            String str = "UPDATE venda SET formaDePagamento=? WHERE idvenda = ?";
            PreparedStatement prst = conn.prepareStatement(str);
            prst.setString(1, jcbFormadePagamento.getSelectedItem().toString());
            prst.setInt(2, FramePrincipal.CodVenda);
            prst.executeUpdate();
            prst.close();
            
            conn.close();

            

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível encontrar a classe Driver!");
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro interno de SQL!"+ex2);
        }
        FramePrincipal.CodVenda++;
        this.dispose();
    }//GEN-LAST:event_jbFinalizarCompraActionPerformed

    private void jbCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarCompraActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbCancelarCompraActionPerformed

    private void jbGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGerarRelatorioActionPerformed
            JFileChooser escolheDiretorio = new JFileChooser();
              
            escolheDiretorio.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int i = escolheDiretorio.showSaveDialog(null);
            
            String caminho = escolheDiretorio.getSelectedFile().getAbsolutePath();
            
            caminho = caminho.replace("\\", "/");
            
            try{
                Document relatorio = new Document();
                FileOutputStream arquivoPDF = new FileOutputStream(caminho+"/"+"relatorioVenda"+".pdf");
            
                PdfWriter escritor = PdfWriter.getInstance(relatorio, arquivoPDF);

                relatorio.open();

                relatorio.setPageSize(PageSize.A4);


                Font fonteTitulo = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);


                Paragraph titulo = new Paragraph("Venda Realizada", fonteTitulo);

                titulo.setAlignment(Element.ALIGN_CENTER);

                relatorio.add(titulo);

                relatorio.add(new Paragraph("\n\n"));

                Class.forName("com.mysql.jdbc.Driver");

                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/dbautopecas", "root", "");

                String sql = "SELECT * from itemvenda WHERE venda_idvenda = ?";

                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setInt(1, FramePrincipal.CodVenda);

                ResultSet resultado = stmt.executeQuery();
                
                List list = new List();

                while(resultado.next()){
                    String pesquisa = "SELECT nomePeca, precoPeca FROM pecas WHERE idpecas = ?";
                    PreparedStatement comando = conn.prepareStatement(pesquisa);
                    comando.setInt(1, resultado.getInt("pecas_idpecas"));
                    ResultSet result = comando.executeQuery();
                    result.next();
                    
                    ListItem item1 = new ListItem("Código: "+ resultado.getString("id"));
                    ListItem item2 = new ListItem("Nome: "+ result.getString("nomePeca"));
                    ListItem item3 = new ListItem("Quantidade: "+ resultado.getString("qtde"));
                    ListItem item4 = new ListItem("Preço: "+ result.getString("precoPeca")+"\n\n");
                    list.add(item1);
                    list.add(item2);
                    list.add(item3);
                    list.add(item4);
                    
                    comando.close();
                }           
                relatorio.add(list);
                conn.close();
                stmt.close();
                relatorio.close();

                JOptionPane.showMessageDialog(null, "Relatório gerado com sucesso!");

                Desktop.getDesktop().open(new File(caminho+"/"+"relatorioVenda"+".pdf"));
            
            }
            catch (DocumentException docEx) {
                JOptionPane.showMessageDialog(null, "Erro no relatório!"+docEx);
            } catch (IOException ioEx){
                JOptionPane.showMessageDialog(null, "Erro de IO:"+ioEx);
            } catch (SQLException sqlEx){
                JOptionPane.showMessageDialog(null, "Erro de SQL:"+sqlEx);
            } catch (ClassNotFoundException cEx){
                JOptionPane.showMessageDialog(null, "Classe Driver não econtrada!");
            }
        
    
    }//GEN-LAST:event_jbGerarRelatorioActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try { 
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1/dbautopecas", "root", "");
            String query = "SELECT * from itemvenda WHERE venda_idvenda = ?";
            PreparedStatement comando = conn.prepareStatement(query);
            comando.setInt(1, FramePrincipal.CodVenda);
            ResultSet resultado;
            resultado = comando.executeQuery();
 
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            
            modelo.setNumRows(0);
                    
            while(resultado.next()){
                String sql = "SELECT nomePeca, precoPeca FROM pecas WHERE idpecas = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setInt(1, resultado.getInt("pecas_idpecas"));
                ResultSet result = stmt.executeQuery();
                result.next();
                modelo.addRow(new Object[]{
                        result.getString("nomePeca"),
                        resultado.getInt("qtde"),
                        result.getDouble("precoPeca"),
                        resultado.getInt("qtde")*result.getInt("precoPeca"),
                    }
                );
                FramePrincipal.valorVenda+=resultado.getInt("qtde")*result.getInt("precoPeca");
                stmt.close();
            }
            
            if (modelo.getRowCount() == 0)
                JOptionPane.showMessageDialog(null, "Registro não encontrado!");
            jlValor.setText(String.valueOf(FramePrincipal.valorVenda));
            
            String str = "UPDATE venda SET valorVenda=? WHERE idvenda = ?";
            PreparedStatement prst = conn.prepareStatement(str);
            prst.setDouble(1, FramePrincipal.valorVenda);
            prst.setInt(2, FramePrincipal.CodVenda);
            prst.executeUpdate();
            prst.close();
            
            comando.close();
            conn.close();

            

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível encontrar a classe Driver!");
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro interno de SQL!"+ex2);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carrinho().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbCancelarCompra;
    private javax.swing.JButton jbFinalizarCompra;
    private javax.swing.JButton jbGerarRelatorio;
    private javax.swing.JComboBox jcbFormadePagamento;
    private javax.swing.JLabel jlCarrinho;
    private javax.swing.JLabel jlFormadePagamento;
    private javax.swing.JLabel jlValor;
    private javax.swing.JLabel jlValorTotal;
    // End of variables declaration//GEN-END:variables
}
