/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 13151000014
 */
public class Venda extends javax.swing.JFrame {

    /**
     * Creates new form Venda
     */
    public Venda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlVendas = new javax.swing.JLabel();
        jlProduto = new javax.swing.JLabel();
        jtfProduto = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbGotoCarrinho = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jlQtde = new javax.swing.JLabel();
        jtfCod = new javax.swing.JTextField();
        jlCod = new javax.swing.JLabel();
        jtfQtde = new javax.swing.JTextField();
        jbAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(99, 113, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlVendas.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jlVendas.setText("Vendas");
        jPanel1.add(jlVendas, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 90, 30));

        jlProduto.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlProduto.setText("Produto:");
        jPanel1.add(jlProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));
        jPanel1.add(jtfProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 190, -1));

        jbPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(jbPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 110, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, ""},
                {"", null, null, ""},
                {"", null, null, ""},
                {"", null, null, ""}
            },
            new String [] {
                "Código", "Nome", "Preço", "Qtde. Disponível"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 600, 90));

        jbGotoCarrinho.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbGotoCarrinho.setText("Ir para o carrinho");
        jbGotoCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGotoCarrinhoActionPerformed(evt);
            }
        });
        jPanel1.add(jbGotoCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        jbCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jbCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, -1, -1));

        jlQtde.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlQtde.setText("Quantidade:");
        jPanel1.add(jlQtde, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, -1, -1));

        jtfCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodActionPerformed(evt);
            }
        });
        jPanel1.add(jtfCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 50, -1));

        jlCod.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jlCod.setText("Código:");
        jPanel1.add(jlCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        jtfQtde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfQtdeActionPerformed(evt);
            }
        });
        jPanel1.add(jtfQtde, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 50, -1));

        jbAdd.setText("Adicionar ao carrinho");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });
        jPanel1.add(jbAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGotoCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGotoCarrinhoActionPerformed
        Carrinho carrinho = new Carrinho();
        carrinho.setSize(530, 350);
        carrinho.setResizable(false);
        carrinho.setVisible(true);
        carrinho.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jbGotoCarrinhoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        try {
            // Dos passos 1 ao 3 se repete os mesmos comandos para se estabelecer a conexao entre a aplicação e o banco de dados
            
            //Passo 1...  
            Class.forName("com.mysql.jdbc.Driver");

            //Passo 2...
            Connection conn;

            //Passo 3...
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1/dbautopecas", "root", "");

            //Passo 4: criar uma nova string com o comando de selecao de dados no banco manipulado...
            String query = "SELECT * FROM pecas WHERE nomePeca LIKE ?";

            //Passo 5: criar o comando propriamente dito para executar a busca dos dados
            PreparedStatement comando = conn.prepareStatement(query);

            //Passo 6: associar o valor coletado pelo unico jtextField de pesquisa (pelo nome) ao ponto de interrogação na String query
            comando.setString(1, jtfProduto.getText()+"%");

            //Passo 7: criar um objeto ResultSet que irá conter os elementos retornados pela consulta
            ResultSet resultado;

            //Passo 8: por meio do comando executeQuery() atribuir o resultado ao objeto "resultado" declarado no comando anterior
            //Diferenca entre o executeQuery() e o executeUpdate(): retorno de dados para manipulacao
            resultado = comando.executeQuery();
            
            
            
            //Passo 9: Criar um objeto para manipular todos os dados da tabela da nossa interface
            //modelo de tabela com caracteristicas, tais como, titulos, qtd de linhas e colunas, tipos dos objetos, etc...
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            
            //Passo 10: inicializar o numero de linhas da tabela com 0
            modelo.setNumRows(0);
                    
            //Passo 11: manipular os dados retornados da consulta e armazenados no objeto "resultado" com o comando while
            while(resultado.next()){
                
                //Passo 12: adicionar uma linha na tabela para exibir os dados retornados pela consulta
                //a cada iteracao do laco "while" é adicionada uma linha na tabela com os dados referentes a consulta
                
                
                
                modelo.addRow(new Object[]{
                        resultado.getInt("idpecas"),
                        resultado.getString("nomePeca"),
                        resultado.getString("precoPeca"),
                        resultado.getInt("qtdeEstoque"),
                    }
                );
                
            }
            
            if (modelo.getRowCount() == 0)
                JOptionPane.showMessageDialog(null, "Registro não encontrado!");

            //Passo 13: fechar a conexão dos objetos criados com o banco de dados
            comando.close();
            conn.close();

            

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível encontrar a classe Driver!");
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro interno de SQL!"+ex2);
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jtfCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodActionPerformed

    private void jtfQtdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfQtdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfQtdeActionPerformed

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        if(FramePrincipal.verificar==false){
            FramePrincipal.verificar=true;
            try { 
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1/dbautopecas", "root", "");            
                String inserir = "INSERT INTO venda (idvenda, ValorVenda, formaDePagamento) VALUES (?, ?, ?)";
                java.sql.PreparedStatement stmt = conn.prepareStatement(inserir);
                stmt.setInt(1, FramePrincipal.CodVenda);
                stmt.setDouble(2, 0);
                stmt.setString(3, "");

                stmt.executeUpdate();
                stmt.close();
                conn.close();                       
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível encontrar a classe Driver!");
            } catch (SQLException ex2) {
               JOptionPane.showMessageDialog(null, "Ocorreu um erro interno de SQL!"+ex2);
            }
        }
        try { 
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1/dbautopecas", "root", "");
            String query = "SELECT qtdeEstoque FROM pecas WHERE idpecas LIKE ?";
            PreparedStatement comando = conn.prepareStatement(query);
            comando.setInt(1, Integer.parseInt(jtfCod.getText()));

            ResultSet resultado;
            resultado = comando.executeQuery();
            resultado.next();
            
            if(resultado.getInt("qtdeEstoque") >= Integer.parseInt(jtfQtde.getText())){
                String inserir = "INSERT INTO itemvenda (qtde, pecas_idpecas, venda_idvenda) VALUES (?, ?, ?)";
                java.sql.PreparedStatement stmt = conn.prepareStatement(inserir);
                stmt.setInt(1, Integer.parseInt(jtfQtde.getText()));
                stmt.setInt(2, Integer.parseInt(jtfCod.getText()));
                stmt.setInt(3, FramePrincipal.CodVenda);

                stmt.executeUpdate();
                stmt.close();
                
                String atualizar = "UPDATE pecas SET qtdeEstoque = ? WHERE idpecas = ?";
                java.sql.PreparedStatement stmt2 = conn.prepareStatement(atualizar);
                stmt2.setInt(1, resultado.getInt("qtdeEstoque") - Integer.parseInt(jtfQtde.getText()));
                stmt2.setInt(2, Integer.parseInt(jtfCod.getText()));
                
                
                stmt2.executeUpdate();

                stmt2.close();
                JOptionPane.showMessageDialog(null, "Adicionado ao carrinho com sucesso!");
            }else{
                JOptionPane.showMessageDialog(null, "Quantidade escolhida excede a disponivel em estoque!");
            }
            comando.close();
            conn.close();
                        

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível encontrar a classe Driver!");
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro interno de SQL!"+ex2);
        }
    }//GEN-LAST:event_jbAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Venda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbGotoCarrinho;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JLabel jlCod;
    private javax.swing.JLabel jlProduto;
    private javax.swing.JLabel jlQtde;
    private javax.swing.JLabel jlVendas;
    private javax.swing.JTextField jtfCod;
    private javax.swing.JTextField jtfProduto;
    private javax.swing.JTextField jtfQtde;
    // End of variables declaration//GEN-END:variables
}
